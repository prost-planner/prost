non-fluents nf_game_of_life_inst_mdp__10 {
	domain = game_of_life_mdp;
	objects {
		x_pos : {x1,x2,x3,x4,x5,x6,x7,x8,x9,x10};
		y_pos : {y1,y2,y3};
	};
	non-fluents {
		NOISE-PROB(x1,y1) = 0.012714098;
		NEIGHBOR(x1,y1,x1,y2);
		NEIGHBOR(x1,y1,x2,y1);
		NEIGHBOR(x1,y1,x2,y2);
		NOISE-PROB(x1,y2) = 0.024050696;
		NEIGHBOR(x1,y2,x1,y1);
		NEIGHBOR(x1,y2,x1,y3);
		NEIGHBOR(x1,y2,x2,y1);
		NEIGHBOR(x1,y2,x2,y2);
		NEIGHBOR(x1,y2,x2,y3);
		NOISE-PROB(x1,y3) = 0.016084328;
		NEIGHBOR(x1,y3,x1,y2);
		NEIGHBOR(x1,y3,x2,y2);
		NEIGHBOR(x1,y3,x2,y3);
		NOISE-PROB(x2,y1) = 0.010219863;
		NEIGHBOR(x2,y1,x1,y1);
		NEIGHBOR(x2,y1,x1,y2);
		NEIGHBOR(x2,y1,x2,y2);
		NEIGHBOR(x2,y1,x3,y1);
		NEIGHBOR(x2,y1,x3,y2);
		NOISE-PROB(x2,y2) = 0.02083448;
		NEIGHBOR(x2,y2,x1,y1);
		NEIGHBOR(x2,y2,x1,y2);
		NEIGHBOR(x2,y2,x1,y3);
		NEIGHBOR(x2,y2,x2,y1);
		NEIGHBOR(x2,y2,x2,y3);
		NEIGHBOR(x2,y2,x3,y1);
		NEIGHBOR(x2,y2,x3,y2);
		NEIGHBOR(x2,y2,x3,y3);
		NOISE-PROB(x2,y3) = 0.016493639;
		NEIGHBOR(x2,y3,x1,y2);
		NEIGHBOR(x2,y3,x1,y3);
		NEIGHBOR(x2,y3,x2,y2);
		NEIGHBOR(x2,y3,x3,y2);
		NEIGHBOR(x2,y3,x3,y3);
		NOISE-PROB(x3,y1) = 0.028516276;
		NEIGHBOR(x3,y1,x2,y1);
		NEIGHBOR(x3,y1,x2,y2);
		NEIGHBOR(x3,y1,x3,y2);
		NEIGHBOR(x3,y1,x4,y1);
		NEIGHBOR(x3,y1,x4,y2);
		NOISE-PROB(x3,y2) = 0.018745653;
		NEIGHBOR(x3,y2,x2,y1);
		NEIGHBOR(x3,y2,x2,y2);
		NEIGHBOR(x3,y2,x2,y3);
		NEIGHBOR(x3,y2,x3,y1);
		NEIGHBOR(x3,y2,x3,y3);
		NEIGHBOR(x3,y2,x4,y1);
		NEIGHBOR(x3,y2,x4,y2);
		NEIGHBOR(x3,y2,x4,y3);
		NOISE-PROB(x3,y3) = 0.027854873;
		NEIGHBOR(x3,y3,x2,y2);
		NEIGHBOR(x3,y3,x2,y3);
		NEIGHBOR(x3,y3,x3,y2);
		NEIGHBOR(x3,y3,x4,y2);
		NEIGHBOR(x3,y3,x4,y3);
		NOISE-PROB(x4,y1) = 0.023402575;
		NEIGHBOR(x4,y1,x3,y1);
		NEIGHBOR(x4,y1,x3,y2);
		NEIGHBOR(x4,y1,x4,y2);
		NEIGHBOR(x4,y1,x5,y1);
		NEIGHBOR(x4,y1,x5,y2);
		NOISE-PROB(x4,y2) = 0.021979118;
		NEIGHBOR(x4,y2,x3,y1);
		NEIGHBOR(x4,y2,x3,y2);
		NEIGHBOR(x4,y2,x3,y3);
		NEIGHBOR(x4,y2,x4,y1);
		NEIGHBOR(x4,y2,x4,y3);
		NEIGHBOR(x4,y2,x5,y1);
		NEIGHBOR(x4,y2,x5,y2);
		NEIGHBOR(x4,y2,x5,y3);
		NOISE-PROB(x4,y3) = 0.025344696;
		NEIGHBOR(x4,y3,x3,y2);
		NEIGHBOR(x4,y3,x3,y3);
		NEIGHBOR(x4,y3,x4,y2);
		NEIGHBOR(x4,y3,x5,y2);
		NEIGHBOR(x4,y3,x5,y3);
		NOISE-PROB(x5,y1) = 0.021083586;
		NEIGHBOR(x5,y1,x4,y1);
		NEIGHBOR(x5,y1,x4,y2);
		NEIGHBOR(x5,y1,x5,y2);
		NEIGHBOR(x5,y1,x6,y1);
		NEIGHBOR(x5,y1,x6,y2);
		NOISE-PROB(x5,y2) = 0.027321136;
		NEIGHBOR(x5,y2,x4,y1);
		NEIGHBOR(x5,y2,x4,y2);
		NEIGHBOR(x5,y2,x4,y3);
		NEIGHBOR(x5,y2,x5,y1);
		NEIGHBOR(x5,y2,x5,y3);
		NEIGHBOR(x5,y2,x6,y1);
		NEIGHBOR(x5,y2,x6,y2);
		NEIGHBOR(x5,y2,x6,y3);
		NOISE-PROB(x5,y3) = 0.01387684;
		NEIGHBOR(x5,y3,x4,y2);
		NEIGHBOR(x5,y3,x4,y3);
		NEIGHBOR(x5,y3,x5,y2);
		NEIGHBOR(x5,y3,x6,y2);
		NEIGHBOR(x5,y3,x6,y3);
		NOISE-PROB(x6,y1) = 0.024764735;
		NEIGHBOR(x6,y1,x5,y1);
		NEIGHBOR(x6,y1,x5,y2);
		NEIGHBOR(x6,y1,x6,y2);
		NEIGHBOR(x6,y1,x7,y1);
		NEIGHBOR(x6,y1,x7,y2);
		NOISE-PROB(x6,y2) = 0.010576258;
		NEIGHBOR(x6,y2,x5,y1);
		NEIGHBOR(x6,y2,x5,y2);
		NEIGHBOR(x6,y2,x5,y3);
		NEIGHBOR(x6,y2,x6,y1);
		NEIGHBOR(x6,y2,x6,y3);
		NEIGHBOR(x6,y2,x7,y1);
		NEIGHBOR(x6,y2,x7,y2);
		NEIGHBOR(x6,y2,x7,y3);
		NOISE-PROB(x6,y3) = 0.021612609;
		NEIGHBOR(x6,y3,x5,y2);
		NEIGHBOR(x6,y3,x5,y3);
		NEIGHBOR(x6,y3,x6,y2);
		NEIGHBOR(x6,y3,x7,y2);
		NEIGHBOR(x6,y3,x7,y3);
		NOISE-PROB(x7,y1) = 0.023609534;
		NEIGHBOR(x7,y1,x6,y1);
		NEIGHBOR(x7,y1,x6,y2);
		NEIGHBOR(x7,y1,x7,y2);
		NEIGHBOR(x7,y1,x8,y1);
		NEIGHBOR(x7,y1,x8,y2);
		NOISE-PROB(x7,y2) = 0.028647663;
		NEIGHBOR(x7,y2,x6,y1);
		NEIGHBOR(x7,y2,x6,y2);
		NEIGHBOR(x7,y2,x6,y3);
		NEIGHBOR(x7,y2,x7,y1);
		NEIGHBOR(x7,y2,x7,y3);
		NEIGHBOR(x7,y2,x8,y1);
		NEIGHBOR(x7,y2,x8,y2);
		NEIGHBOR(x7,y2,x8,y3);
		NOISE-PROB(x7,y3) = 0.01449094;
		NEIGHBOR(x7,y3,x6,y2);
		NEIGHBOR(x7,y3,x6,y3);
		NEIGHBOR(x7,y3,x7,y2);
		NEIGHBOR(x7,y3,x8,y2);
		NEIGHBOR(x7,y3,x8,y3);
		NOISE-PROB(x8,y1) = 0.018533165;
		NEIGHBOR(x8,y1,x7,y1);
		NEIGHBOR(x8,y1,x7,y2);
		NEIGHBOR(x8,y1,x8,y2);
		NEIGHBOR(x8,y1,x9,y1);
		NEIGHBOR(x8,y1,x9,y2);
		NOISE-PROB(x8,y2) = 0.013072096;
		NEIGHBOR(x8,y2,x7,y1);
		NEIGHBOR(x8,y2,x7,y2);
		NEIGHBOR(x8,y2,x7,y3);
		NEIGHBOR(x8,y2,x8,y1);
		NEIGHBOR(x8,y2,x8,y3);
		NEIGHBOR(x8,y2,x9,y1);
		NEIGHBOR(x8,y2,x9,y2);
		NEIGHBOR(x8,y2,x9,y3);
		NOISE-PROB(x8,y3) = 0.02124291;
		NEIGHBOR(x8,y3,x7,y2);
		NEIGHBOR(x8,y3,x7,y3);
		NEIGHBOR(x8,y3,x8,y2);
		NEIGHBOR(x8,y3,x9,y2);
		NEIGHBOR(x8,y3,x9,y3);
		NOISE-PROB(x9,y1) = 0.011981677;
		NEIGHBOR(x9,y1,x8,y1);
		NEIGHBOR(x9,y1,x8,y2);
		NEIGHBOR(x9,y1,x9,y2);
		NEIGHBOR(x9,y1,x10,y1);
		NEIGHBOR(x9,y1,x10,y2);
		NOISE-PROB(x9,y2) = 0.026951706;
		NEIGHBOR(x9,y2,x8,y1);
		NEIGHBOR(x9,y2,x8,y2);
		NEIGHBOR(x9,y2,x8,y3);
		NEIGHBOR(x9,y2,x9,y1);
		NEIGHBOR(x9,y2,x9,y3);
		NEIGHBOR(x9,y2,x10,y1);
		NEIGHBOR(x9,y2,x10,y2);
		NEIGHBOR(x9,y2,x10,y3);
		NOISE-PROB(x9,y3) = 0.014111699;
		NEIGHBOR(x9,y3,x8,y2);
		NEIGHBOR(x9,y3,x8,y3);
		NEIGHBOR(x9,y3,x9,y2);
		NEIGHBOR(x9,y3,x10,y2);
		NEIGHBOR(x9,y3,x10,y3);
		NOISE-PROB(x10,y1) = 0.02276952;
		NEIGHBOR(x10,y1,x9,y1);
		NEIGHBOR(x10,y1,x9,y2);
		NEIGHBOR(x10,y1,x10,y2);
		NOISE-PROB(x10,y2) = 0.01313008;
		NEIGHBOR(x10,y2,x9,y1);
		NEIGHBOR(x10,y2,x9,y2);
		NEIGHBOR(x10,y2,x9,y3);
		NEIGHBOR(x10,y2,x10,y1);
		NEIGHBOR(x10,y2,x10,y3);
		NOISE-PROB(x10,y3) = 0.02819415;
		NEIGHBOR(x10,y3,x9,y2);
		NEIGHBOR(x10,y3,x9,y3);
		NEIGHBOR(x10,y3,x10,y2);
	};
}

instance game_of_life_inst_mdp__10 {
	domain = game_of_life_mdp;
	non-fluents = nf_game_of_life_inst_mdp__10;
	init-state {
		alive(x1,y3);
		alive(x2,y2);
		alive(x2,y3);
		alive(x4,y1);
		alive(x4,y3);
		alive(x6,y2);
		alive(x6,y3);
		alive(x7,y1);
		alive(x8,y1);
		alive(x8,y2);
		alive(x8,y3);
		alive(x10,y1);
		alive(x10,y2);
	};

	max-nondef-actions = 1;
	horizon  = 40;
	discount = 1.0;
}
