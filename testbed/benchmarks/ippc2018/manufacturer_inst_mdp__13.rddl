instance manufacturer_inst_mdp__13 {
    domain = manufacturer_mdp;

    objects {
        good : { g0000, g0001, g0100, g0200, g0201 };
    };
 
    non-fluents {
        // PROCESSED_TO
        PROCESSED_TO(g0000, g0100);
        PROCESSED_TO(g0001, g0100);
        PROCESSED_TO(g0100, g0200);
        PROCESSED_TO(g0100, g0200);
        PROCESSED_TO(g0100, g0201);
        PROCESSED_TO(g0000, g0201);


        // PRICES
        PRICE(g0000) = 20;
        PRICE(g0001) = 18;
        PRICE(g0100) = 65;
        PRICE(g0200) = 201;
        PRICE(g0201) = 133;


        // PRICE TRENDS
        PRICE_TREND_CHANGE_PROB(g0000) = 0.05;
        PRICE_TREND_CHANGE_PROB(g0001) = 0.02;
        PRICE_TREND_CHANGE_PROB(g0100) = 0.02;
        PRICE_TREND_CHANGE_PROB(g0200) = 0.06;
        PRICE_TREND_CHANGE_PROB(g0201) = 0.05;


        // PRICE_LEVEL_FACTORS
        PRICE_LEVEL_FACTOR(@level1) = 0.5;
        PRICE_LEVEL_FACTOR(@level2) = 0.6667;
        PRICE_LEVEL_FACTOR(@level3) = 0.8333;
        PRICE_LEVEL_FACTOR(@level4) = 1.0;
        PRICE_LEVEL_FACTOR(@level5) = 1.1667;
        PRICE_LEVEL_FACTOR(@level6) = 1.3333;
        PRICE_LEVEL_FACTOR(@level7) = 1.5;


        // PRICE_LEVEL_PROBS
        PRICE_LEVEL_PROB(@level1, @level1, @down) = 1.0;
        PRICE_LEVEL_PROB(@level1, @level2, @down) = 0.2;
        PRICE_LEVEL_PROB(@level2, @level2, @down) = 0.8;
        PRICE_LEVEL_PROB(@level2, @level3, @down) = 0.2;
        PRICE_LEVEL_PROB(@level3, @level3, @down) = 0.8;
        PRICE_LEVEL_PROB(@level3, @level4, @down) = 0.2;
        PRICE_LEVEL_PROB(@level4, @level4, @down) = 0.8;
        PRICE_LEVEL_PROB(@level4, @level5, @down) = 0.2;
        PRICE_LEVEL_PROB(@level5, @level5, @down) = 0.8;
        PRICE_LEVEL_PROB(@level5, @level6, @down) = 0.2;
        PRICE_LEVEL_PROB(@level6, @level6, @down) = 0.8;
        PRICE_LEVEL_PROB(@level6, @level7, @down) = 0.2;
        PRICE_LEVEL_PROB(@level7, @level7, @down) = 0.8;

        PRICE_LEVEL_PROB(@level1, @level1, @stable) = 0.9;
        PRICE_LEVEL_PROB(@level1, @level2, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level2, @level1, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level2, @level2, @stable) = 0.8;
        PRICE_LEVEL_PROB(@level2, @level3, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level3, @level2, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level3, @level3, @stable) = 0.8;
        PRICE_LEVEL_PROB(@level3, @level4, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level4, @level3, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level4, @level4, @stable) = 0.8;
        PRICE_LEVEL_PROB(@level4, @level5, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level5, @level4, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level5, @level5, @stable) = 0.8;
        PRICE_LEVEL_PROB(@level5, @level6, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level6, @level5, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level6, @level6, @stable) = 0.8;
        PRICE_LEVEL_PROB(@level6, @level7, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level7, @level6, @stable) = 0.1;
        PRICE_LEVEL_PROB(@level7, @level7, @stable) = 0.9;

        PRICE_LEVEL_PROB(@level1, @level1, @up) = 0.8;
        PRICE_LEVEL_PROB(@level2, @level1, @up) = 0.2;
        PRICE_LEVEL_PROB(@level2, @level2, @up) = 0.8;
        PRICE_LEVEL_PROB(@level3, @level2, @up) = 0.2;
        PRICE_LEVEL_PROB(@level3, @level3, @up) = 0.8;
        PRICE_LEVEL_PROB(@level4, @level3, @up) = 0.2;
        PRICE_LEVEL_PROB(@level4, @level4, @up) = 0.8;
        PRICE_LEVEL_PROB(@level5, @level4, @up) = 0.2;
        PRICE_LEVEL_PROB(@level5, @level5, @up) = 0.8;
        PRICE_LEVEL_PROB(@level6, @level5, @up) = 0.2;
        PRICE_LEVEL_PROB(@level6, @level6, @up) = 0.8;
        PRICE_LEVEL_PROB(@level7, @level6, @up) = 0.2;
        PRICE_LEVEL_PROB(@level7, @level7, @up) = 1.0;


        // FACTORY
        MAX_NUM_FACTORIES = 2;
        BUILD_FACTORY_COST(g0000) = 0;
        PROB_CONSTRUCTION_DELAY_FACTORY(g0000) = 0.00;
        BUILD_FACTORY_COST(g0001) = 0;
        PROB_CONSTRUCTION_DELAY_FACTORY(g0001) = 0.00;
        BUILD_FACTORY_COST(g0100) = 48;
        PROB_CONSTRUCTION_DELAY_FACTORY(g0100) = 0.07;
        BUILD_FACTORY_COST(g0200) = 85;
        PROB_CONSTRUCTION_DELAY_FACTORY(g0200) = 0.45;
        BUILD_FACTORY_COST(g0201) = 0;
        PROB_CONSTRUCTION_DELAY_FACTORY(g0201) = 0.00;


        // STAFF
        // instance with marketing manager
        SALARY_MARKETING_MANAGER = 16;
        PROB_MARKETING_MANAGER_APPLIES = 0.60;
        MARKETING_MANAGER_BONUS = 0.40;

        // instance with lobbyist
        SALARY_LOBBYIST = 13;
        PROB_LOBBYIST_APPLIES = 0.57;
        LOBBYIST_BONUS = 0.14;

        // instance with production manager
        SALARY_PRODUCTION_MANAGER = 17;
        PROB_PRODUCTION_MANAGER_APPLIES = 0.17;

    };

    init-state {
        have-factory(g0201);

        price-trend(g0000) = @up;
        price-trend(g0001) = @up;
        price-trend(g0100) = @stable;
        price-trend(g0200) = @stable;
        price-trend(g0201) = @down;
        
    };

    horizon = 50;

    discount = 1.0;
}