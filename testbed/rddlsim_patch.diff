===================================================================
--- src/rddl/competition/Server.java	(revision 250)
+++ src/rddl/competition/Server.java	(working copy)
@@ -118,11 +118,13 @@
 	private static int ID = 0;
 	private static int DEFAULT_NUM_ROUNDS = 30;
     private static long DEFAULT_TIME_ALLOWED = 1080000; // milliseconds = 18 minutes
+    private static boolean USE_TIMEOUT = false;
 	public int port;
 	public int id;
 	public String clientName = null;
 	public String requestedInstance = null;
 	public RandomDataGenerator rand;
+    public static String logFolder = null;
 	
 	public State      state;
 	public INSTANCE   instance;
@@ -145,10 +147,10 @@
 		ArrayList<RDDL> rddls = new ArrayList<RDDL>();
 		int port = PORT_NUMBER;
 		if ( args.length < 1 ) {
-			System.out.println("usage: rddlfilename-or-dir (optional) portnumber num-rounds random-seed state-viz-class-name");
+			System.out.println("usage: rddlfilename-or-dir (optional) portnumber num-rounds log-folder random-seed state-viz-class-name");
 			System.out.println("\nexample 1: Server rddlfilename-or-dir");
 			System.out.println("example 2: Server rddlfilename-or-dir 2323");
-			System.out.println("example 3: Server rddlfilename-or-dir 2323 100 0 rddl.viz.GenericScreenDisplay");
+			System.out.println("example 3: Server rddlfilename-or-dir 2323 100 experiments/experiment23/ 0 rddl.viz.GenericScreenDisplay");
 			System.exit(1);
 		}
 				
@@ -163,14 +165,19 @@
 			if (args.length > 2) {
 				DEFAULT_NUM_ROUNDS = Integer.valueOf(args[2]);
 			}
+                        if (args.length > 3) {
+                            logFolder = args[3];
+                        } else {
+                            logFolder = new String("");
+                        }
 			int rand_seed = -1;
-			if ( args.length > 3) {
-				rand_seed = Integer.valueOf(args[3]);
+			if ( args.length > 4) {
+				rand_seed = Integer.valueOf(args[4]);
 			} else {
 				rand_seed = DEFAULT_SEED;
 			}
-			if (args.length > 4) {
-				state_viz = (StateViz)Class.forName(args[4]).newInstance();
+			if (args.length > 5) {
+				state_viz = (StateViz)Class.forName(args[5]).newInstance();
 			}
 			System.out.println("RDDL Server Initialized");
 			while (true) {
@@ -356,7 +363,7 @@
 					//        an early round end
 					// TODO: check that this works
 					round_elapsed_time = (System.currentTimeMillis() - start_round_time);
-					OUT_OF_TIME = session_elapsed_time + round_elapsed_time > timeAllowed;
+					OUT_OF_TIME = session_elapsed_time + round_elapsed_time > timeAllowed && USE_TIMEOUT;
 				}
 				accum_total_reward += accum_reward;
 				session_elapsed_time += round_elapsed_time;
@@ -397,7 +404,7 @@
 	}
 	
 	public void writeToLog(String msg) throws IOException {
-		BufferedWriter bw = new BufferedWriter(new FileWriter(LOG_FILE + "-" + this.port + ".log" , true));
+		BufferedWriter bw = new BufferedWriter(new FileWriter(logFolder + "/" + LOG_FILE + "-" + this.port + ".log" , true));
 		bw.write(msg);
 		bw.newLine();
 		bw.flush();
